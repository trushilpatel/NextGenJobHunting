// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"next-gen-job-hunting/api/auth"
	"next-gen-job-hunting/api/joburl"
	"next-gen-job-hunting/api/token"
	"next-gen-job-hunting/api/user"
	"next-gen-job-hunting/config/database"
)

// Injectors from wire.go:

func InitializeUserController() *user.UserController {
	db := database.NewDB()
	userRepository := user.NewUserRepository(db)
	userService := user.NewUserService(userRepository)
	userValidationService := user.NewUserValidationService(userService)
	userController := user.NewUserController(userValidationService)
	return userController
}

func InitializeJobUrlController() *joburl.JobUrlController {
	db := database.NewDB()
	jobUrlRepository := joburl.NewJobUrlRepository(db)
	jobUrlService := joburl.NewJobUrlService(jobUrlRepository)
	userRepository := user.NewUserRepository(db)
	userService := user.NewUserService(userRepository)
	jobUrlController := joburl.NewJobUrlController(jobUrlService, userService)
	return jobUrlController
}

func InitializeAuthController() *auth.AuthController {
	db := database.NewDB()
	userRepository := user.NewUserRepository(db)
	tokenRepository := token.NewTokenRepository(db, userRepository)
	userService := user.NewUserService(userRepository)
	tokenService := token.NewTokenService(tokenRepository, userService)
	authService := auth.NewAuthService(userRepository, tokenService)
	authValidationService := auth.NewAuthValidationService(authService)
	authController := auth.NewAuthController(authValidationService)
	return authController
}
